import * as fsSyncer from '..'
import {mergeJsonConfigs} from '../merge-config'
import {dedent} from '../util'

test('merge configs', () => {
  const userVSCodeSettings = dedent(`
    {
      "eslint.packageManager": "yarn",
      // User setting should be preserved
      "eslint.debug": true,
      "files.exclude": {
        // vscode excludes this by default, but I like seeing it.
        "**/.git": false
      },
      "files.watcherExclude": {
        /**
         * If these aren't excluded from watcher tasks it can cause performance issues
         * when trying to load large projects
         */
        "**/.git/objects/**": true,
        "**/.git/subtree-cache/**": true,
        "**/node_modules/**": true
      }
    }
  `)

  const teamVSCodeSettings = dedent(`
    {
      // Team tooling requires overriding package manager
      "eslint.packageManager": "pnpm",
      "custom.team.plugin": {
        // very important setting that everyone should have
        "activityBarColor": "#ff0000"
      },
      "files.watcherExclude": {
        // ignore file generated by the team's custom code generator
        "**/team-code-generator/generated/**": true
      }
    }
  `)

  const merged = mergeJsonConfigs({
    filepath: '.vscode/settings.json',
    existingContent: userVSCodeSettings,
    targetContent: teamVSCodeSettings,
  })

  expect(merged).toMatchInlineSnapshot(`
    "{
      // Team tooling requires overriding package manager
      \\"eslint.packageManager\\": \\"pnpm\\",
      \\"custom.team.plugin\\": {
        // very important setting that everyone should have
        \\"activityBarColor\\": \\"#ff0000\\"
      },
      \\"files.watcherExclude\\": {
        // ignore file generated by the team's custom code generator
        \\"**/team-code-generator/generated/**\\": true,
        /**
         * If these aren't excluded from watcher tasks it can cause performance issues
         * when trying to load large projects
         */
        \\"**/.git/objects/**\\": true,
        \\"**/.git/subtree-cache/**\\": true,
        \\"**/node_modules/**\\": true
      },
      // User setting should be preserved
      \\"eslint.debug\\": true,
      \\"files.exclude\\": {
        // vscode excludes this by default, but I like seeing it.
        \\"**/.git\\": false
      }
    }"
  `)
})

describe('config merge strategy', () => {
  test('merge config merge strategy', () => {
    const sharedSettings = {
      '.vscode': {
        'settings.json': `
          {
            // Team tooling requires overriding package manager
            "eslint.packageManager": "pnpm",
            "custom.team.plugin": {
              // very important setting that everyone should have
              "activityBarColor": "#ff0000"
            },
            "files.watcherExclude": {
              // ignore file generated by the team's custom code generator
              "**/team-code-generator/generated/**": true
            }
          }
        `,
      },
      '.eslintrc.js': `module.exports = require('@your-company/shared-configs/eslint-config')`,
      'jest.config.js': `module.exports = require('@your-company/shared-configs/jest-config')`,
      'tsconfig.json': `
        {
          "extends": "@your-company/shared-configs/typescript-config.json",
          "compilerOptions": {
            "rootDir": "src",
            "outDir": "dist"
          }
        }
      `,
      'package.json': `
        {
          "scripts": {
            "build": "tsc -p .",
            "lint": "eslint .",
            "test": "jest"
          },
          "devDependencies": {
            "@your-company/shared-configs": "*",
            "eslint": "*",
            "jest": "*",
            "typescript": "*"
          }
        }
      `,
    }

    const specificProjectfileTree = {
      '.vscode': {
        'settings.json': `
          {
            "eslint.packageManager": "yarn",
            // User setting should be preserved
            "eslint.debug": true,
            "files.exclude": {
              // vscode excludes this by default, but I like seeing it.
              "**/.git": false
            },
            "files.watcherExclude": {
              /**
               * If these aren't excluded from watcher tasks it can cause performance issues
               * when trying to load large projects
               */
              "**/.git/objects/**": true,
              "**/.git/subtree-cache/**": true,
              "**/node_modules/**": true
            }
          }
        `,
      },
      src: {
        'index.ts': 'console.log(123)',
      },
      'package.json': `
        {
          "name": "@your-company/some-specific-project",
          "version": "0.0.1"
        }
      `,
      'tsconfig.json': `
        {
          "compilerOptions": {
            // this project has a custom target but we still want to inherit other team settings
            "target": "es2018"
          }
        }
      `,
    }

    // first write the existing user code, this is just test setup though
    fsSyncer.jestFixture({targetState: specificProjectfileTree}).sync()

    // expect(1).toEqual(0)

    const syncer = fsSyncer.jestFixture({
      targetState: sharedSettings,
      mergeStrategy: mergeJsonConfigs,
    })

    syncer.sync()

    // we should see the team settings merged into the user settings
    expect(syncer.yaml()).toMatchInlineSnapshot(`
      "---
      .eslintrc.js: module.exports = require('@your-company/shared-configs/eslint-config')
      jest.config.js: module.exports = require('@your-company/shared-configs/jest-config')
      package.json: |-
        {
          \\"scripts\\": {
            \\"build\\": \\"tsc -p .\\",
            \\"lint\\": \\"eslint .\\",
            \\"test\\": \\"jest\\"
          },
          \\"devDependencies\\": {
            \\"@your-company/shared-configs\\": \\"*\\",
            \\"eslint\\": \\"*\\",
            \\"jest\\": \\"*\\",
            \\"typescript\\": \\"*\\"
          },
          \\"name\\": \\"@your-company/some-specific-project\\",
          \\"version\\": \\"0.0.1\\"
        }
      tsconfig.json: |-
        {
          \\"extends\\": \\"@your-company/shared-configs/typescript-config.json\\",
          \\"compilerOptions\\": {
            \\"rootDir\\": \\"src\\",
            \\"outDir\\": \\"dist\\",
            // this project has a custom target but we still want to inherit other team settings
            \\"target\\": \\"es2018\\"
          }
        }
      .vscode: 
        settings.json: |-
          {
            // Team tooling requires overriding package manager
            \\"eslint.packageManager\\": \\"pnpm\\",
            \\"custom.team.plugin\\": {
              // very important setting that everyone should have
              \\"activityBarColor\\": \\"#ff0000\\"
            },
            \\"files.watcherExclude\\": {
              // ignore file generated by the team's custom code generator
              \\"**/team-code-generator/generated/**\\": true,
              /**
               * If these aren't excluded from watcher tasks it can cause performance issues
               * when trying to load large projects
               */
              \\"**/.git/objects/**\\": true,
              \\"**/.git/subtree-cache/**\\": true,
              \\"**/node_modules/**\\": true
            },
            // User setting should be preserved
            \\"eslint.debug\\": true,
            \\"files.exclude\\": {
              // vscode excludes this by default, but I like seeing it.
              \\"**/.git\\": false
            }
          }
      src: 
        index.ts: |-
          console.log(123)
          "
    `)
  })
})
